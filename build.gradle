plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.snaacker'
sourceCompatibility = '18'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Add these START
bootJar {
    archiveClassifier.set('boot')
}

jar {
    archiveClassifier.set('')
}

task dockerContext(type: Copy, dependsOn: build) {
    from "build/libs/time-register-server-boot.jar"
    into "docker"
}

task buildDocker(type: Exec, dependsOn: dockerContext) {
    workingDir "${projectDir}"
    commandLine 'bash', '-c', 'cd docker && docker build -t time-register:latest .'
    doLast {
        file("${projectDir}/docker/time-register-server-boot.jar").delete()
    }
}

